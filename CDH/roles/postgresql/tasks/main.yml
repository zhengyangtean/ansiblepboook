- name: Yum | Install Yum packages
  yum:
    name:
      - postgresql-server 
      - postgresql-contrib

# idempotent implementation using folder named "activated" as flag to init postgres
- name: postgresql | postgresql init-ed?
  stat:
    path: /etc/ansibleFlags/postgresql_init
  register: postgresql_init

- name: postgresql | set LC_ALL
  command: echo 'LC_ALL="en_US.UTF-8"' >> /etc/locale.conf
  when: postgresql_init.stat.exists == False

- name: postgresql | postgresql init db
  command: sudo su -l postgres -c "postgresql-setup initdb"
  when: postgresql_init.stat.exists == False

- lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: 'host    all             all             127.0.0.1/32            ident'
    line: 'host    all             all             127.0.0.1/32            md5'

- name: postgresql | allow remote access
  lineinfile:
    path: /var/lib/pgsql/data/postgresql.conf
    line: "listen_addresses = '*'"

- name: postgresql | optimising config
  lineinfile: 
    dest: /var/lib/pgsql/data/postgresql.conf
    line: '{{ item }}'
  with_items:
    - 'shared_buffers = 256MB'
    - 'wal_buffers = 8MB'
    - 'checkpoint_segments = 16' 
    - 'checkpoint_completion_target = 0.9' 

- name: restart service postgresql on centos
  when: postgresql_init.stat.exists == False
  systemd:
    state: restarted
    name: postgresql

- name: THP | Creates postgresql_initdirectory
  when: postgresql_init.stat.exists == False
  file:
    path: /etc/ansibleFlags/postgresql_init
    state: directory
    owner: root
    group: root

- name: Systemd | Enable postgresql
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - postgresql

- name: postgresql_db | create tables
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ item }}"
  with_items:
    - scm
    - amon
    - rman
    - hue
    - metastore
    - oozie

- name: postgresql_user | create scm user
  become: true
  become_user: postgres
  postgresql_user:
    db: scm
    name: scm
    password: scm
    expires: infinity

- name: postgresql_user | create amon user
  become: true
  become_user: postgres
  postgresql_user:
    db: amon
    name: amon
    password: amon
    expires: infinity

- name: postgresql_user | create rman user
  become: true
  become_user: postgres
  postgresql_user:
    db: rman
    name: rman
    password: rman
    expires: infinity

- name: postgresql_user | create hue user
  become: true
  become_user: postgres
  postgresql_user:
    db: hue
    name: hue
    password: hue
    expires: infinity

- name: postgresql_user | create metastore user
  become: true
  become_user: postgres
  postgresql_user:
    db: metastore
    name: hive
    password: hive
    expires: infinity


- name: postgresql_user | create oozie user
  become: true
  become_user: postgres
  postgresql_user:
    db: oozie
    name: oozie
    password: oozie
    expires: infinity

- name: postgresql | postgresql standard_conforming_strings?
  stat:
    path: /etc/ansibleFlags/standard_conforming_strings
  register: standard_conforming_strings

- name: Testing DB to make sure it is available
  become: true
  become_user: postgres
  command: "psql -U postgres -c 'ALTER DATABASE {{ item }} SET standard_conforming_strings=off;'"
  with_items:
    - metastore
    - oozie
  when: standard_conforming_strings.stat.exists == False

- name: postgres | Creates standard_conforming_strings
  when: postgresql_init.stat.exists == False
  file:
    path: /etc/ansibleFlags/standard_conforming_strings
    state: directory
    owner: root
    group: root


  
